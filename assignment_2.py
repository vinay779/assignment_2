# -*- coding: utf-8 -*-
"""Assignment_2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qmGl7-ikEzgr5JT1Jsd-hFcCcLeKPvrm
"""

# creating 15 Random numbers using random Module in between 1,20
from numpy import random
arr = []
for i in range(1,16):
  arr.append(random.randint(1,20))
arr

# converting Normal random Array into numpy array
import numpy as np
arr1 = np.array(arr)
arr1

# Reshaping array into (3,5) rows, column

arr2 = arr1.reshape(3,5)
arr2

# printing shape of the array

print(arr2.shape)

arr2.max(axis=1)

# Replacing max values row wise to zero 0

maxNum = np.amax(arr2, axis=1) 
arr2 = np.where(np.isin(arr2,maxNum), 0, arr2)
print(arr2)

import pandas as pd

# Read CSV file into DataFrame df
df = pd.read_csv('data.csv')

# Show dataframe
print(df)

# printing Statical analysis of given dataset

df.describe()

# Checking Null values using isnull() method

df.isnull()

# Printing weather Columns null or not using boolean as True or False
print(df.isnull())

# filling null values using mean of the dataset

df = df.fillna(df.mean())

df.isna().any()

#  getting  aggregate operation on dataset columns Duration and Pulse

df.aggregate(["min","max","count","mean"])

# Filtered data with Calories value in between 500 - 1000

df[(df["Calories"] >  500) & (df["Calories"]<1000)]

# Filter data for Calories greater than 500 and Pulse Less than 100

df[(df["Calories"] >  500) & (df["Pulse"]<100)]

# Created another dataframe my selecting only Duration, Pulse and Calories

df_modified = df[["Duration", "Pulse","Calories"]]
print(df_modified)

# Dropped Maxpulse column from original data using drop() method

df.drop(columns=["Maxpulse"])

# printing Data types of columns
df.dtypes

# Changing Datatype of Calories column to int datatype
df['Calories'] = df["Calories"].astype(int)

# Drawing Scatter plot using Pandas plot.scatter() method
df.plot.scatter(x="Duration", y="Calories")

import matplotlib.pyplot as plt
# Data to plot
languages = 'Java', 'Python', 'PHP', 'JavaScript', 'C#', 'C++'
popuratity = [22.2, 17.6, 8.8, 8, 7.7, 6.7]
colors = ["#1f77b4", "#ff7f0e", "#2ca02c", "#d62728", "#9467bd", "#8c564b"]
explode = (0.1, 0, 0, 0,0,0)  
# Plot
plt.pie(popuratity, explode=explode, labels=languages, colors=colors,
autopct='%1.1f%%', shadow=True, startangle=140)

plt.axis('equal')
plt.show()